create sequence kenguru.hibernate_sequence start 1 increment 1;

/*==============================================================*/
/* table: parts_of_speech                                      */
/*==============================================================*/
create table kenguru.parts_of_speech (
        id int8 generated by default as identity,
        name                 varchar(100)         not null,
        primary key (id)
);

-- set table ownership
alter table kenguru.parts_of_speech owner to postgres
;

/*==============================================================*/
/* table: kenguru.words                                                 */
/*==============================================================*/
create table kenguru.words (
        id int8 generated by default as identity,
        name                 varchar(100)         not null,
        transcription        varchar(100)         null,
        primary key (id)
);

-- set table ownership
alter table kenguru.words owner to postgres
;

/*==============================================================*/
/* table: kenguru.words_part_of_speech                                  */
/*==============================================================*/
create table kenguru.words_part_of_speech (
        id int8 generated by default as identity,
        id_word              int8              not null,
        id_part_sp           int8              not null,
        primary key (id),
        foreign key (id_part_sp)
            references kenguru.parts_of_speech (id)
            on delete cascade on update cascade,
        foreign key (id_word)
            references kenguru.words (id)
            on delete cascade on update cascade
);
-- set table ownership
alter table kenguru.words_part_of_speech owner to postgres
;

/*==============================================================*/
/* table: comparative_adjectives                                */
/*==============================================================*/
create table kenguru.comparative_adjectives (
        id int8 generated by default as identity,
        id_wps               int8              not null,
        comparative          varchar(100)         null,
        superlative          varchar(100)         null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_wps)
            references kenguru.words_part_of_speech (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.comparative_adjectives owner to postgres
;
/*==============================================================*/
/* table: groups                                                */
/*==============================================================*/
create table kenguru.groups (
        id int8 generated by default as identity,
        name                 character varying(100) not null,
        primary key (id)
);

-- set table ownership
alter table kenguru.groups owner to postgres
;
/*==============================================================*/
/* table: users                                                 */
/*==============================================================*/
create table kenguru.users (
        id int8 generated by default as identity,
        name                 character varying(100) not null,
        password             character varying(100) not null,
        active               BOOLEAN,
        activation_code      character varying(100) null,
        email                character varying(100) null,
        primary key (id)
);

-- set table ownership
alter table kenguru.users owner to postgres
;
/*==============================================================*/
/* table: users_roles                                                 */
/*==============================================================*/
CREATE TABLE kenguru.users_roles
(
        id 		serial                  not null,
        id_user int8                 not null,
        roles 	character varying(100)  not null,
        primary key (id),
        foreign key (id_user)
            references kenguru.users (id)
            ON UPDATE CASCADE
            ON DELETE CASCADE
);

-- set table ownership
alter TABLE kenguru.users_roles
    OWNER to postgres;

/*==============================================================*/
/* table: groups_and_teachers                                   */
/*==============================================================*/
create table kenguru.groups_and_teachers (
        id_gt               int8 generated by default as identity,
        id_teacher           int8                 not null,
        id_group             int8                 not null,
        primary key (id_gt),
        foreign key (id_teacher)
            references kenguru.users (id)
            on delete cascade on update cascade,
        foreign key (id_group)
            references kenguru.groups (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.groups_and_teachers owner to postgres
;
/*==============================================================*/
/* table: irregular_verbs                                       */
/*==============================================================*/
create table kenguru.irregular_verbs (
        id int8 generated by default as identity,
        id_wps              int8               not null,
        second_form          varchar(100)         not null,
        third_form           varchar(100)         not null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_wps)
            references kenguru.words_part_of_speech (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.irregular_verbs owner to postgres
;
/*==============================================================*/
/* table: phrasal_verbs                                         */
/*==============================================================*/
create table kenguru.phrasal_verbs (
        id int8 generated by default as identity,
        id_wps              int8               not null,
        preposition          varchar(30)          not null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_wps)
            references kenguru.words_part_of_speech (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.phrasal_verbs owner to postgres
;
/*==============================================================*/
/* table: users_phrasal_verbs_scores                      */
/*==============================================================*/
create table kenguru.users_phrasal_verbs_scores (
        id int8 generated by default as identity,
        id_pv                int8            not null,
        description          text               null,
        score				 int4				not null,
        id_user              int8            not null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_pv)
            references kenguru.phrasal_verbs (id)
            on delete cascade on update cascade,
        foreign key (id_user)
            references kenguru.users (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.users_phrasal_verbs_scores owner to postgres
;
/*==============================================================*/
/* Table: phrasal_verbs_translations                                    */
/*==============================================================*/
create table kenguru.phrasal_verbs_translations (
        id int8 generated by default as identity,
        name                 varchar(100)         not null,
        primary key (id)
);
-- set table ownership
alter table kenguru.phrasal_verbs_translations owner to postgres;

/*==============================================================*/
/* Table: users_phrasal_verbs_translations                              */
/*==============================================================*/
create table kenguru.users_phrasal_verbs_translations (
        id                  int8 generated by default as identity,
        id_upv               int8             not null,
        id_translation       int8             not null,
        primary key (id),
        foreign key (id_translation)
            references kenguru.phrasal_verbs_translations (id)
            on delete cascade on update cascade,
        foreign key (id_upv)
            references kenguru.users_phrasal_verbs_scores (id)
            on delete cascade on update cascade
);
-- set table ownership
alter table kenguru.users_phrasal_verbs_translations owner to postgres;
/*==============================================================*/
/* table: phrasal_verbs_tests_dates                             */
/*==============================================================*/
create table kenguru.phrasal_verbs_tests_dates (
        id int8 generated by default as identity,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        constraint pk_phrasal_verbs_tests_dates primary key (id)
);

-- set table ownership
alter table kenguru.phrasal_verbs_tests_dates owner to postgres
;
/*==============================================================*/
/* table: kenguru.phrasal_verbs_tests                                   */
/*==============================================================*/
create table kenguru.phrasal_verbs_tests (
        id int8 generated by default as identity,
        id_test              int8              not null,
        id_upv              int8               not null,
        eng                  varchar(100)         not null,
        preposition          varchar(30)          not null,
        translation            varchar(100)       not null,
        description          text                 not null,
        id_gt                int8              not null,
        primary key (id),
        foreign key (id_upv)
            references kenguru.users_phrasal_verbs_scores (id)
            on delete cascade on update cascade,
        foreign key (id_gt)
            references kenguru.groups_and_teachers (id_gt)
            on delete cascade on update cascade,
        foreign key (id_test)
            references kenguru.phrasal_verbs_tests_dates (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.phrasal_verbs_tests owner to postgres
;
/*==============================================================*/
/* table: kenguru.topics                                                */
/*==============================================================*/
create table kenguru.topics (
        id int8 generated by default as identity,
        name                 varchar(100)         not null,
        description          text                 not null,
        constraint pk_topics primary key (id)
);

-- set table ownership
alter table kenguru.topics owner to postgres
;
/*==============================================================*/
/* table: kenguru.users_comparative_adjectives_sc                       */
/*==============================================================*/
create table kenguru.users_comparative_adjectives_scores (
        id                   int8 generated by default as identity,
        id_ca                int8                not null,
        id_user              int8                not null,
        score                int4                not null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_ca)
            references kenguru.comparative_adjectives (id)
            on delete cascade on update cascade,
        foreign key (id_user)
            references kenguru.users (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.users_comparative_adjectives_scores owner to postgres
;
/*==============================================================*/
/* table: kenguru.users_irregular_verbs_scores                         */
/*==============================================================*/
create table kenguru.users_irregular_verbs_scores (
        id                  int8 generated by default as identity,
        id_iv                int8                not null,
        id_user              int8                not null,
        score                int4                not null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_iv)
            references kenguru.irregular_verbs (id)
            on delete cascade on update cascade,
        foreign key (id_user)
            references kenguru.users (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.users_irregular_verbs_scores owner to postgres
;
/*==============================================================*/
/* table: kenguru.users_words                              */
/*==============================================================*/
create table kenguru.users_words (
        id int8 generated by default as identity,
        id_wps               int8                 not null,
        id_user              int8                 not null,
        score                int4                 not null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id),
        foreign key (id_wps)
            references kenguru.words_part_of_speech (id)
            on delete cascade on update cascade,
        foreign key (id_user)
            references kenguru.users (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.users_words owner to postgres
;
/*==============================================================*/
/* Table: words_translations                                    */
/*==============================================================*/
create table kenguru.words_translations (
        id int8 generated by default as identity,
        name                 varchar(100)         not null,
        primary key (id)
);
-- set table ownership
alter table kenguru.words_translations owner to postgres;

/*==============================================================*/
/* Table: users_words_translations                              */
/*==============================================================*/
create table kenguru.users_words_translations (
        id int8 generated by default as identity,
        id_uw                int8             not null,
        id_translation       int8             not null,
        primary key (id),
        foreign key (id_translation)
            references kenguru.words_translations (id)
            on delete cascade on update cascade,
        foreign key (id_uw)
            references kenguru.users_words (id)
            on delete cascade on update cascade
);
-- set table ownership
alter table kenguru.users_words_translations owner to postgres;

/*==============================================================*/
/* table: kenguru.words_tests_dates                                     */
/*==============================================================*/
create table kenguru.words_tests_dates (
        id int8 generated by default as identity,
        mode                 int8                 null,
        date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
        primary key (id)
);

-- set table ownership
alter table kenguru.words_tests_dates owner to postgres
;
/*==============================================================*/
/* table: kenguru.words_tests                                           */
/*==============================================================*/
create table kenguru.words_tests (
        id                  int8 generated by default as identity,
        id_test              int8                not null,
        id_uw               int8                 not null,
        eng                  varchar(100)           not null,
        rus                  varchar(100)           not null,
        id_gt                int8                not null,
        primary key (id),
        foreign key (id_uw)
            references kenguru.users_words (id)
            on delete cascade on update cascade,
        foreign key (id_gt)
            references kenguru.groups_and_teachers (id_gt)
            on delete cascade on update cascade,
        foreign key (id_test)
            references kenguru.words_tests_dates (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.words_tests owner to postgres
;
/*==============================================================*/
/* table: kenguru.words_topics                                          */
/*==============================================================*/
create table kenguru.words_topics (
        id                  int8 generated by default as identity,
        id_uw               int8                 not null,
        id_topic             int8                not null,
        primary key (id),
        foreign key (id_topic)
            references kenguru.topics (id)
            on delete cascade on update cascade,
        foreign key (id_uw)
            references kenguru.users_words (id)
            on delete cascade on update cascade
);

-- set table ownership
alter table kenguru.words_topics owner to postgres
;

/*==============================================================*/
/* table: kenguru.users_groups                                  */
/*==============================================================*/
create table kenguru.users_groups (
        id int8 generated by default as identity,
        id_user            int8              not null,
        id_group           int8              not null,
        primary key (id),
        foreign key (id_user)
            references kenguru.users (id)
            on delete cascade on update cascade,
        foreign key (id_group)
            references kenguru.groups (id)
            on delete cascade on update cascade
);
-- set table ownership
alter table kenguru.users_groups owner to postgres
;

insert into kenguru.users (id, name, password, active)
values (1, 'admin', '123', true);

insert into kenguru.users_roles (id_user, roles)
values (1, 'USER'), (1, 'ADMIN');






























